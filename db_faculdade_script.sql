-- MySQL Script generated by MySQL Workbench
-- Fri Jun 10 17:11:05 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bd_faculdade
-- -----------------------------------------------------
-- Banco de dados criado para o gerenciamento de uma Faculdade, sendo utilizado para o aprendizado em SQL, Python, QT Designer, MySQL.

-- -----------------------------------------------------
-- Schema bd_faculdade
--
-- Banco de dados criado para o gerenciamento de uma Faculdade, sendo utilizado para o aprendizado em SQL, Python, QT Designer, MySQL.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_faculdade` DEFAULT CHARACTER SET utf8 ;
USE `bd_faculdade` ;

-- -----------------------------------------------------
-- Table `bd_faculdade`.`departamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`departamento` (
  `cod_departamento` INT NOT NULL AUTO_INCREMENT COMMENT 'Código do departamento',
  `nome_departamento` VARCHAR(40) NOT NULL COMMENT 'Nome do departamento',
  PRIMARY KEY (`cod_departamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`professor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`professor` (
  `cod_professor` INT NOT NULL AUTO_INCREMENT COMMENT 'Código do professor',
  `nome_professor` VARCHAR(40) NOT NULL COMMENT 'Nome do professor',
  `sobrenome_professor` VARCHAR(40) NOT NULL COMMENT 'Sobrenome do professor',
  `status` TINYINT NOT NULL COMMENT 'Status (Lecionando / Não Lecionando)',
  `cod_departamento` INT NOT NULL COMMENT 'Código do professor',
  PRIMARY KEY (`cod_professor`),
  INDEX `fk_dep_prof_idx` (`cod_departamento` ASC) VISIBLE,
  CONSTRAINT `fk_dep_prof`
    FOREIGN KEY (`cod_departamento`)
    REFERENCES `bd_faculdade`.`departamento` (`cod_departamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`curso` (
  `cod_curso` INT NOT NULL AUTO_INCREMENT COMMENT 'Código do curso',
  `nome_curso` VARCHAR(40) NOT NULL COMMENT 'Nome do curso',
  `cod_departamento` INT NOT NULL COMMENT 'Código do departamento',
  PRIMARY KEY (`cod_curso`),
  INDEX `fk_dep_curso_idx` (`cod_departamento` ASC) VISIBLE,
  CONSTRAINT `fk_dep_curso`
    FOREIGN KEY (`cod_departamento`)
    REFERENCES `bd_faculdade`.`departamento` (`cod_departamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`turma` (
  `cod_turma` INT NOT NULL AUTO_INCREMENT COMMENT 'Código de identificação da turma',
  `cod_curso` INT NOT NULL COMMENT 'Código de identificação do curso',
  `periodo` VARCHAR(10) NOT NULL COMMENT 'Período da turma (manhã, tarde, noite)',
  `num_alunos` INT NOT NULL COMMENT 'Número de alunos',
  `data_inicio` DATE NOT NULL COMMENT 'Data de início da turma',
  `data_fim` DATE NOT NULL COMMENT 'Data de término da turma',
  PRIMARY KEY (`cod_turma`),
  INDEX `fk_turma_curso_idx` (`cod_curso` ASC) VISIBLE,
  CONSTRAINT `fk_turma_curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `bd_faculdade`.`curso` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`aluno` (
  `ra` INT NOT NULL AUTO_INCREMENT COMMENT 'Código de identificação do aluno',
  `nome_aluno` VARCHAR(40) NOT NULL COMMENT 'Nome do aluno',
  `sobrenome_aluno` VARCHAR(40) NOT NULL COMMENT 'Sobrenome do aluno',
  `cpf` VARCHAR(11) NOT NULL COMMENT 'CPF do aluno',
  `status` TINYINT NOT NULL COMMENT 'Status da matríula do aluno (ativo / inativo)',
  `cod_turma` INT NOT NULL COMMENT 'Código de identificação da turma',
  `cod_curso` INT NOT NULL COMMENT 'Código de identificação do curso',
  `sexo` CHAR(1) NOT NULL COMMENT 'Sexo (gênero) do aluno',
  `nome_pai` VARCHAR(80) NULL COMMENT 'Nome do pai do aluno',
  `nome_mae` VARCHAR(80) NOT NULL COMMENT 'Nome da mãe do aluno',
  `email` VARCHAR(80) NOT NULL COMMENT 'e-mail do aluno',
  `whatsapp` VARCHAR(15) NOT NULL COMMENT 'Número de WhatsApp do aluno',
  PRIMARY KEY (`ra`),
  INDEX `fk_aluno_curso_idx` (`cod_curso` ASC) VISIBLE,
  INDEX `fk_aluno_turma_idx` (`cod_turma` ASC) VISIBLE,
  CONSTRAINT `fk_aluno_curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `bd_faculdade`.`curso` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aluno_turma`
    FOREIGN KEY (`cod_turma`)
    REFERENCES `bd_faculdade`.`turma` (`cod_turma`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`disciplina` (
  `cod_disciplina` INT NOT NULL AUTO_INCREMENT COMMENT 'Código de identificação da disciplina',
  `cod_disciplina_depende` INT NOT NULL,
  `nome_disciplina` VARCHAR(40) NOT NULL COMMENT 'Nome da disciplina',
  `descricao` VARCHAR(200) NULL COMMENT 'Descrição da disciplina',
  `cod_departamento` INT NOT NULL COMMENT 'Código de identificação do departamento',
  `carga_horaria` INT NOT NULL COMMENT 'Carga horária da disciplina',
  `num_alunos` INT NOT NULL COMMENT 'Número de alunos inscritos na disciplina',
  PRIMARY KEY (`cod_disciplina`),
  INDEX `fk_dep_disc_idx` (`cod_departamento` ASC) VISIBLE,
  INDEX `fk_disc_disc_idx` (`cod_disciplina_depende` ASC) VISIBLE,
  CONSTRAINT `fk_dep_disc`
    FOREIGN KEY (`cod_departamento`)
    REFERENCES `bd_faculdade`.`departamento` (`cod_departamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disc_disc`
    FOREIGN KEY (`cod_disciplina_depende`)
    REFERENCES `bd_faculdade`.`disciplina` (`cod_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`historico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`historico` (
  `cod_historico` INT NOT NULL AUTO_INCREMENT COMMENT 'Código de identificação do histórico',
  `ra` INT NOT NULL COMMENT 'Código de identificação do aluno',
  `data_inicio` DATE NOT NULL COMMENT 'Data do início da disciplina para o aluno',
  `data_fim` DATE NOT NULL COMMENT 'Data de término da disciplina do aluno',
  PRIMARY KEY (`cod_historico`),
  INDEX `fk_ra_hist_idx` (`ra` ASC) VISIBLE,
  CONSTRAINT `fk_ra_hist`
    FOREIGN KEY (`ra`)
    REFERENCES `bd_faculdade`.`aluno` (`ra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`hist_disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`hist_disciplina` (
  `cod_historico` INT NOT NULL COMMENT 'Código de identificação do histórico',
  `cod_disciplina` INT NOT NULL COMMENT 'Código de identificação da discipllina',
  `nota` DECIMAL(4,2) NOT NULL COMMENT 'Nota da disciplina',
  `frequencia` INT NOT NULL COMMENT 'Número de faltas, baseado no número de aulas da disciplina',
  PRIMARY KEY (`cod_historico`, `cod_disciplina`),
  INDEX `fk_disci_idx` (`cod_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_hist`
    FOREIGN KEY (`cod_historico`)
    REFERENCES `bd_faculdade`.`historico` (`cod_historico`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disc`
    FOREIGN KEY (`cod_disciplina`)
    REFERENCES `bd_faculdade`.`disciplina` (`cod_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`curso_disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`curso_disciplina` (
  `cod_curso` INT NOT NULL COMMENT 'Código de identificação do curso',
  `cod_disciplina` INT NOT NULL COMMENT 'Código de identificação da disciplina',
  PRIMARY KEY (`cod_curso`, `cod_disciplina`),
  INDEX `fk_disc_idx` (`cod_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_curso`
    FOREIGN KEY (`cod_curso`)
    REFERENCES `bd_faculdade`.`curso` (`cod_curso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disc`
    FOREIGN KEY (`cod_disciplina`)
    REFERENCES `bd_faculdade`.`disciplina` (`cod_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`prof_disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`prof_disciplina` (
  `cod_professor` INT NOT NULL COMMENT 'Código de identificação do professor',
  `cod_disciplina` INT NOT NULL COMMENT 'Código de identificação da disciplina',
  PRIMARY KEY (`cod_professor`, `cod_disciplina`),
  INDEX `fk_disc_idx` (`cod_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_prof`
    FOREIGN KEY (`cod_professor`)
    REFERENCES `bd_faculdade`.`professor` (`cod_professor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disc`
    FOREIGN KEY (`cod_disciplina`)
    REFERENCES `bd_faculdade`.`disciplina` (`cod_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`aluno_disciplina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`aluno_disciplina` (
  `ra` INT NOT NULL COMMENT 'Código de identificação do aluno',
  `cod_disciplina` INT NOT NULL COMMENT 'Código de identificação da disciplina',
  PRIMARY KEY (`ra`, `cod_disciplina`),
  INDEX `fk_disc_idx` (`cod_disciplina` ASC) VISIBLE,
  CONSTRAINT `fk_aluno`
    FOREIGN KEY (`ra`)
    REFERENCES `bd_faculdade`.`aluno` (`ra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_disc`
    FOREIGN KEY (`cod_disciplina`)
    REFERENCES `bd_faculdade`.`disciplina` (`cod_disciplina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`tipo_logradouro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`tipo_logradouro` (
  `cod_tipo_logradouro` INT NOT NULL AUTO_INCREMENT,
  `tipo_logradouro` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`cod_tipo_logradouro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`endereco_aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`endereco_aluno` (
  `cod_end_aluno` INT(11) NOT NULL COMMENT 'códifo de identificação do endereço do aluno',
  `ra` INT NOT NULL,
  `cod_tipo_logradouro` INT(11) NOT NULL,
  `nome_rua` VARCHAR(50) NOT NULL,
  `num_rua` INT(11) NOT NULL,
  `complemento` VARCHAR(20) NULL,
  `cep` VARCHAR(8) NOT NULL,
  `aluno_ra` INT NOT NULL,
  PRIMARY KEY (`cod_end_aluno`),
  INDEX `fk_endereco_aluno_idx` (`ra` ASC) VISIBLE,
  INDEX `fk_tipo_logradouro_idx` (`cod_tipo_logradouro` ASC) VISIBLE,
  CONSTRAINT `fk_endereco_aluno`
    FOREIGN KEY (`ra`)
    REFERENCES `bd_faculdade`.`aluno` (`ra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tipo_logradouro`
    FOREIGN KEY (`cod_tipo_logradouro`)
    REFERENCES `bd_faculdade`.`tipo_logradouro` (`cod_tipo_logradouro`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '		';


-- -----------------------------------------------------
-- Table `bd_faculdade`.`tipo_telefone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`tipo_telefone` (
  `cod_tipo_telefone` INT NOT NULL AUTO_INCREMENT,
  `tipo_telefone` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`cod_tipo_telefone`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_faculdade`.`telefones_aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_faculdade`.`telefones_aluno` (
  `cod_telefones_aluno` INT NOT NULL AUTO_INCREMENT,
  `ra` INT NOT NULL,
  `cod_tipo_telefone` INT NOT NULL,
  `num_telefone` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`cod_telefones_aluno`),
  INDEX `fk_tipo_telefone_idx` (`cod_tipo_telefone` ASC) VISIBLE,
  INDEX `fk_ra_idx` (`ra` ASC) VISIBLE,
  CONSTRAINT `fk_tipo_telefone`
    FOREIGN KEY (`cod_tipo_telefone`)
    REFERENCES `bd_faculdade`.`tipo_telefone` (`cod_tipo_telefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ra`
    FOREIGN KEY (`ra`)
    REFERENCES `bd_faculdade`.`aluno` (`ra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
